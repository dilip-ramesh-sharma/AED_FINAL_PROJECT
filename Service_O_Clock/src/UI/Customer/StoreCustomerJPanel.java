/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.Customer;

import Business.Ecosystem;
import Customer.Customer;
import StoreServices.Store;
import UserAccounts.UserAccounts;
import WorkQueue.StoreServiceWorkRequest;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hi
 */
public class StoreCustomerJPanel extends javax.swing.JPanel {

    /**
     * Creates new form StoreCustomerJPanel
     */
    private JPanel workAreaContainer;
    private Ecosystem ecosystem;
    private UserAccounts userAccount;

    
     public StoreCustomerJPanel(JPanel workAreaContainer, UserAccounts userAccount, Ecosystem ecosystem) {
        initComponents();
        
        this.workAreaContainer = workAreaContainer;
        this.userAccount = userAccount;
        this.ecosystem = ecosystem;
        populateStoreTable();
        populateRequestTable(); 
    }
     
    public StoreCustomerJPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        requestTable = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        orgTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        cartBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe Script", 1, 18)); // NOI18N
        jLabel2.setText("Pick A Salon of your choice:");

        requestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Request ID", "Salon Name", "Address", "Request Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(requestTable);

        orgTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Salon Name", "Salon Address", "Salon Contact", "Salon Email"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(orgTable);

        jLabel1.setFont(new java.awt.Font("Segoe Print", 1, 24)); // NOI18N
        jLabel1.setText("STORE SHOPPING DASHBOARD");

        cartBtn.setText("View Services Offered");
        cartBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cartBtnActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe Script", 1, 18)); // NOI18N
        jLabel3.setText("Your Service Requests:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(199, 199, 199)
                        .addComponent(jLabel1)))
                .addContainerGap(608, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(345, 345, 345))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(54, 54, 54)
                            .addComponent(jLabel2))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(75, 75, 75)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 538, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(125, 125, 125)
                            .addComponent(cartBtn)))
                    .addContainerGap(178, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jButton1)
                .addGap(104, 104, 104)
                .addComponent(jLabel1)
                .addGap(82, 82, 82)
                .addComponent(jLabel3)
                .addContainerGap(270, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap(293, Short.MAX_VALUE)
                    .addComponent(jLabel2)
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGap(18, 18, 18)
                    .addComponent(cartBtn)
                    .addGap(48, 48, 48)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void populateStoreTable() {
        
        DefaultTableModel salonTableModel = (DefaultTableModel) orgTable.getModel();
        salonTableModel.setRowCount(0);
        
            Object[] row = new Object[4];    
            for(Store store:ecosystem.getStoreDirectory().getStoreList()){
                 row[0] = store;
                 row[1] = store.getStoreAddress();
                 row[2] = store.getStoreContact();
                 row[3] = store.getStoreEmail();
                 salonTableModel.addRow(row);
            }
            
    }

    public void populateRequestTable() {
        
        /*
        DefaultTableModel requestTableModel = (DefaultTableModel) requestTable.getModel();
        requestTableModel.setRowCount(0);

          for (Customer cust:ecosystem.getCustomerDirectory().getCustomerList()) {   
            if (cust.getUsername().equals(userAccount.getUsername())) {
               for(StoreServiceWorkRequest store:cust.getStoreWorkRequestList()){
                Object[] row = new Object[4];
                row[0] = store;
                row[1] = store.getStoreName();
                row[2] = store.getStoreAddress();
                row[3] = store.getStatus();
                requestTableModel.addRow(row);
               }            
            }  
        }*/
        
        DefaultTableModel requestTableModel = (DefaultTableModel) requestTable.getModel();
        requestTableModel.setRowCount(0);
        
        ArrayList<Customer> customerlist=ecosystem.getCustomerDirectory().getCustomerList();
        if(customerlist!=null){
          for (Customer cust:customerlist) {   
            if (cust.getUsername().equals(userAccount.getUsername())) {
               for(StoreServiceWorkRequest store:cust.getStoreWorkRequestList()){
                Object[] row = new Object[4];
                row[0] = store;
                row[1] = store.getStoreName();
                row[2] = store.getStoreAddress();
                row[3] = store.getStatus();
                requestTableModel.addRow(row);
               }            
            }  
          }
        }

    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        workAreaContainer.remove(this);
        CardLayout layout = (CardLayout) workAreaContainer.getLayout();
        layout.previous(workAreaContainer);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cartBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cartBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = orgTable.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null,"No Selections Made!","Warning",JOptionPane.WARNING_MESSAGE);
        }
        else{
            Store store = (Store)orgTable.getValueAt(selectedRow, 0);
            StoreCartJPanel cart = new StoreCartJPanel(workAreaContainer, userAccount, ecosystem, store);
            workAreaContainer.add("Store Cart", cart);
            CardLayout layout=(CardLayout)workAreaContainer.getLayout();
            layout.next(workAreaContainer);
        }
    }//GEN-LAST:event_cartBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cartBtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable orgTable;
    private javax.swing.JTable requestTable;
    // End of variables declaration//GEN-END:variables
}
