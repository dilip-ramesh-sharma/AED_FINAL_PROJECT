/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.BeauticianPanels;

import Beautician.BeauticianWorker;
import Business.Ecosystem;
import UserAccounts.UserAccounts;
import WorkQueue.SalonWorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 91730
 */
public class BeauticianWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form BeauticianWorkAreaJPanel
     */
    private JPanel workAreaContainer;
    private Ecosystem ecosystem;
    private UserAccounts userAccount;
    
    public BeauticianWorkAreaJPanel() {
        initComponents();
    }
    
    public BeauticianWorkAreaJPanel(JPanel workAreaContainer, UserAccounts userAccount, Ecosystem ecosystem) {
        initComponents();
        
        this.workAreaContainer = workAreaContainer;
        this.userAccount = userAccount;
        this.ecosystem = ecosystem;
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        salonTable = new javax.swing.JTable();
        process = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        refresh = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        jLabel1.setText("Salon Request");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 50, -1, 24));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/BeauticianPanels/salonReq.jpeg"))); // NOI18N
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 100, 255, 279));

        salonTable.setBackground(new java.awt.Color(255, 204, 204));
        salonTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Request Id", "Organisation Name", "Member Name", "Service Address", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(salonTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(282, 130, 590, 182));

        process.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        process.setText("Process");
        process.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processActionPerformed(evt);
            }
        });
        add(process, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 330, -1, -1));

        backButton.setBackground(new java.awt.Color(133, 211, 255));
        backButton.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 410, -1, 30));

        refresh.setText("Refresh");
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });
        add(refresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 100, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        workAreaContainer.remove(this);
        CardLayout layout = (CardLayout) workAreaContainer.getLayout();
        layout.previous(workAreaContainer);
    }//GEN-LAST:event_backButtonActionPerformed

    private void processActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processActionPerformed
        // TODO add your handling code here:
        int selectedRow = salonTable.getSelectedRow();
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null,"Select a Row");
            return;
        }
        SalonWorkRequest request = (SalonWorkRequest)salonTable.getValueAt(selectedRow, 0);

        if(request.getStatus().equals("Completed")){
            JOptionPane.showMessageDialog(null,"Request already Completed", "Warning", JOptionPane.WARNING_MESSAGE);
        }else if(request.getStatus().equals("New Request") || request.getStatus().equals("In Progress")){
            JOptionPane.showMessageDialog(null,"Request is not yet Assigned", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        else{
            BeauticianWorkRequestJPanel beauticianWorkRequestJPanel = new BeauticianWorkRequestJPanel(workAreaContainer, request,ecosystem, userAccount);
            workAreaContainer.add("processWorkRequestJPanel", beauticianWorkRequestJPanel);
            CardLayout layout = (CardLayout) workAreaContainer.getLayout();
            layout.next(workAreaContainer);
        }
    }//GEN-LAST:event_processActionPerformed

    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed
        // TODO add your handling code here:
        populateTable();
    }//GEN-LAST:event_refreshActionPerformed

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) salonTable.getModel();
        model.setRowCount(0);
        
        for(BeauticianWorker beautician : ecosystem.getBeauticianDirectory().getBeauticianList()){
            if(beautician.getBeauticianUsrnme().equals(userAccount.getUsername())){
                    
                for(SalonWorkRequest request : beautician.getBeauticianRequestList()){
                Object[] row = new Object[6];
                
                row[0] = request;
                row[1] = request.getSalonName();
                row[2] = request.getCustomerName();
                row[3] = request.getServiceAddress();
                row[4] = request.getStatus();
                row[5] = request.getMessage();
                model.addRow(row);     
                }
            } 
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton process;
    private javax.swing.JButton refresh;
    private javax.swing.JTable salonTable;
    // End of variables declaration//GEN-END:variables
}
