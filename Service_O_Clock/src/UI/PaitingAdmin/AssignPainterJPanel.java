/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.PaitingAdmin;

/**
 *
 * @author 91730
 */
public class AssignPainterJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AssignPainterJPanel
     */
    public AssignPainterJPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backButton = new javax.swing.JButton();
        assignJLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        painterNameJtable = new javax.swing.JTable();
        assignPainterButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        backButton.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 560, -1, 30));

        assignJLabel.setFont(new java.awt.Font("Segoe UI Semibold", 1, 24)); // NOI18N
        assignJLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        assignJLabel.setText("Assign Painter");
        add(assignJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 180, 333, -1));

        painterNameJtable.setFont(new java.awt.Font("Segoe UI Semibold", 0, 11)); // NOI18N
        painterNameJtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Painter Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(painterNameJtable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 280, 410, 110));

        assignPainterButton.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        assignPainterButton.setText("Assign Paiting Work to Selected Painter");
        assignPainterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignPainterButtonActionPerformed(evt);
            }
        });
        add(assignPainterButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 460, 300, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/PaitingAdmin/painter2.jpeg"))); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 90, 310, 410));
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
//        userProcessContainer.remove(this);
//        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
//        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backButtonActionPerformed

    private void assignPainterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignPainterButtonActionPerformed
//        // TODO add your handling code here:
//        int selectedRow = VolunteerJTable.getSelectedRow();
//        if(selectedRow<0){
//            JOptionPane.showMessageDialog(null,"Please select a row from the table to view details","Warning",JOptionPane.WARNING_MESSAGE);
//        }
//        else
//        {
//
//            DeliveryVolunteer volunteer  = (DeliveryVolunteer)VolunteerJTable.getValueAt(selectedRow, 0);
//            volunteer.getSoupRequestList().add(request);
//            volunteer.setAvailability(false);
//            request.setStatus("Assigned Volunteer");
//
//            for(Member member:system.getMemberDirectory().getMemberList()){
//                if(request.getMemName().equals(member.getMemUsername())){
//                    for(SoupWorkRequest request : member.getSoupRequestList()){
//                        if(request.getStatus().equals("In Progress")){
//                            request.setStatus("Assigned Volunteer");
//                        }
//                    }
//                }
//            }
//            userProcessContainer.remove(this);
//            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
//            layout.previous(userProcessContainer);
//
//        }
    }//GEN-LAST:event_assignPainterButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel assignJLabel;
    private javax.swing.JButton assignPainterButton;
    private javax.swing.JButton backButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable painterNameJtable;
    // End of variables declaration//GEN-END:variables
}
