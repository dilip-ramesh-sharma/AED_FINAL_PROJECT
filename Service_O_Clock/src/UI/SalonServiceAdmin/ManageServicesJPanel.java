/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.SalonServiceAdmin;

import Business.Ecosystem;
import HomePainting.HomePainting;
import HomePainting.PaintingPackages;
import SalonServices.Salon;
import UserAccounts.UserAccounts;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author tanujkodali
 */
public class ManageServicesJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageRequestJPanel
     */
    private JPanel workAreaContainer;
    private Ecosystem ecosystem;
    private UserAccounts userAccount;
    
    public ManageServicesJPanel() {
        initComponents();
    }

    public ManageServicesJPanel(JPanel workAreaContainer, UserAccounts userAccount, Ecosystem ecosystem) {
        initComponents();
        this.workAreaContainer = workAreaContainer;
        this.userAccount = userAccount;
        this.ecosystem = ecosystem;
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        salonTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        serviceName = new javax.swing.JTextField();
        description = new javax.swing.JTextField();
        type = new javax.swing.JTextField();
        addServicesButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        jLabel1.setText("Manage Services");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(313, 6, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/SalonServiceAdmin/salon2.jpeg"))); // NOI18N
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 112, 307, 269));

        salonTable.setBackground(new java.awt.Color(255, 204, 204));
        salonTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Service Name", "Description", "Type"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(salonTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(313, 94, -1, 181));

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel3.setText("Service Name:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(367, 303, -1, -1));

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel4.setText("Description:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(367, 347, -1, -1));

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel5.setText("Type:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(367, 390, -1, -1));
        add(serviceName, new org.netbeans.lib.awtextra.AbsoluteConstraints(511, 298, 139, -1));
        add(description, new org.netbeans.lib.awtextra.AbsoluteConstraints(511, 342, 139, -1));
        add(type, new org.netbeans.lib.awtextra.AbsoluteConstraints(511, 385, 139, -1));

        addServicesButton.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        addServicesButton.setText("Add Services");
        addServicesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addServicesButtonActionPerformed(evt);
            }
        });
        add(addServicesButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(453, 438, 114, 39));

        backButton.setBackground(new java.awt.Color(133, 211, 255));
        backButton.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 490, -1, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        workAreaContainer.remove(this);
        CardLayout layout = (CardLayout) workAreaContainer.getLayout();
        layout.previous(workAreaContainer);
    }//GEN-LAST:event_backButtonActionPerformed

    private void addServicesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addServicesButtonActionPerformed
        // TODO add your handling code here:
        String name = serviceName.getText();
        String desc = description.getText();
        String color = type.getText();

        try {
            if(name == null || name.isEmpty()){
                throw new NullPointerException("Service Name field cannot be Empty !!!");
            }
        } catch(NullPointerException e){
            JOptionPane.showMessageDialog(null, "Service Name field cannot be Empty !!!");
            return;
        }

        try {
            if(desc==null || desc.isEmpty()){
                throw new NullPointerException("Description field cannot be Empty !!!");
            }
        } catch(NullPointerException e){
            JOptionPane.showMessageDialog(null, "Description field cannot be Empty !!!");
            return;
        }

        try {
            if(color==null || color.isEmpty()){
                throw new NullPointerException("Color Field cannot be empty !!!");
            }
        }  catch(NullPointerException e){
            JOptionPane.showMessageDialog(null, "Color Field cannot be empty !!!");
            return;
        }catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Invalid Color !!!");
            return;
        }

        for(Salon salon:ecosystem.getSalonDirectory().getSalonsList()){
            if(salon.getUsername().equals(userAccount.getUsername())){
                ecosystem.getSalonDirectory().addServiceTypes(salon, name, desc, name);
            }
        }

        serviceName.setText("");
        description.setText("");
        type.setText("");
        populateTable();
    }//GEN-LAST:event_addServicesButtonActionPerformed

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) salonTable.getModel();
        model.setRowCount(0);

        for (Salon ss:ecosystem.getSalonDirectory().getSalonsList()) {
            if (ss.getUsername().equals(userAccount.getUsername())) {
               for(SalonServices.SalonServicesOffered services: ss.getServicesOfferedList()){
                Object[] row = new Object[3];
                row[0] = services.getServiceName();
                row[1] = services.getServiceDescription();
                row[2] = services.getServiceType();
                model.addRow(row);
               } 
            } 
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addServicesButton;
    private javax.swing.JButton backButton;
    private javax.swing.JTextField description;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable salonTable;
    private javax.swing.JTextField serviceName;
    private javax.swing.JTextField type;
    // End of variables declaration//GEN-END:variables
}
