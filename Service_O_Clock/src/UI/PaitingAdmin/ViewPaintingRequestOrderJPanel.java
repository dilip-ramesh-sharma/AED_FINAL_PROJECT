/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.PaitingAdmin;

/**
 *
 * @author 91730
 */
public class ViewPaintingRequestOrderJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewPaintingRequestOrderJPanel
     */
    public ViewPaintingRequestOrderJPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleRequestDetails1 = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();
        personRequesting = new javax.swing.JTextField();
        personRequestingLabel = new javax.swing.JLabel();
        specialInstructionsLabel = new javax.swing.JLabel();
        specialInstructions = new javax.swing.JTextField();
        btnAccept = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        paitingServiceTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        titleRequestDetails1.setFont(new java.awt.Font("Segoe UI Semibold", 1, 24)); // NOI18N
        titleRequestDetails1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleRequestDetails1.setText("Painting Request Order Details");
        add(titleRequestDetails1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 50, 507, -1));

        backButton.setBackground(new java.awt.Color(133, 211, 255));
        backButton.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 490, -1, 30));

        personRequesting.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        add(personRequesting, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 290, 290, 30));

        personRequestingLabel.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        personRequestingLabel.setText("Person Requesting");
        add(personRequestingLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 300, -1, -1));

        specialInstructionsLabel.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        specialInstructionsLabel.setText("Special Instructions");
        add(specialInstructionsLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 350, -1, -1));

        specialInstructions.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        add(specialInstructions, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 340, 290, 30));

        btnAccept.setBackground(new java.awt.Color(133, 211, 255));
        btnAccept.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        btnAccept.setText("Accept Painting Request");
        btnAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcceptActionPerformed(evt);
            }
        });
        add(btnAccept, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 410, 170, 30));

        btnCancel.setBackground(new java.awt.Color(133, 211, 255));
        btnCancel.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        btnCancel.setText("Cancel Painting Request");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        add(btnCancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 410, 170, 30));

        paitingServiceTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Painting Service Type", "Description", "Material Type"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(paitingServiceTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 130, 607, 122));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/PaitingAdmin/painter.jpeg"))); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 276, 330, 320));
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
//        userProcessContainer.remove(this);
//        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
//        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backButtonActionPerformed

    private void btnAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcceptActionPerformed
        // TODO add your handling code here:
//        if(request.getStatus().equals("In Progress")) {
//            JOptionPane.showMessageDialog(null, "Already Accepted", "Warning", JOptionPane.WARNING_MESSAGE);
//        }
//        else if(request.getStatus().equals("Assigned Volunteer")) {
//            JOptionPane.showMessageDialog(null, "Already Accepted", "Warning", JOptionPane.WARNING_MESSAGE);
//        }
//        else if(request.getStatus().equals("Order Cancelled")) {
//            JOptionPane.showMessageDialog(null, "Order Cancelled Already", "Warning", JOptionPane.WARNING_MESSAGE);
//        }
//        else{
//            request.setStatus("In Progress");
//            for(Member mem:system.getMemberDirectory().getMemberList()){
//                if(request.getMemName().equals(mem.getMemUsername())){
//                    for(SoupWorkRequest request : mem.getSoupRequestList()){
//                        if(request.getStatus().equals("New Order")) {
//                            request.setStatus("In Progress");
//                        }
//
//                    }
//                }
//            }
//            userProcessContainer.remove(this);
//            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
//            layout.previous(userProcessContainer);
//        }
    }//GEN-LAST:event_btnAcceptActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
//        if(request.getStatus().equals("New Order")) {
//            request.setStatus("Order Cancelled");
//            for(Member mem:system.getMemberDirectory().getMemberList()){
//                if(request.getMemName().equals(mem.getMemUsername())){
//                    for(SoupWorkRequest req : mem.getSoupRequestList()){
//                        if(req.getStatus().equals("New Order")) {
//                            req.setStatus("Order Cancelled");
//                        }
//                    }
//                }
//            }
//        }
//        else{
//            JOptionPane.showMessageDialog(null, "Order is Accepted already. Cannot cancel Request !!!", "Warning", JOptionPane.WARNING_MESSAGE);
//        }
//
//        userProcessContainer.remove(this);
//        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
//        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnCancelActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JButton btnAccept;
    private javax.swing.JButton btnCancel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable paitingServiceTable;
    private javax.swing.JTextField personRequesting;
    private javax.swing.JLabel personRequestingLabel;
    private javax.swing.JTextField specialInstructions;
    private javax.swing.JLabel specialInstructionsLabel;
    private javax.swing.JLabel titleRequestDetails1;
    // End of variables declaration//GEN-END:variables
}
