/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.HomeServiceAdmin;

import Business.Ecosystem;
import HomeService.HomeService;
import SalonServices.Salon;
import UserAccounts.UserAccounts;
import WorkQueue.HomeServicesWorkRequest;
import WorkQueue.SalonWorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author tanujkodali
 */
public class ManageHomeWorkerRequestJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageHomeWorkerRequestJPanel
     */
    private JPanel workAreaContainer;
    private Ecosystem ecosystem;
    private UserAccounts userAccount;
    
  

    public ManageHomeWorkerRequestJPanel() {
        initComponents();
    }
      public  ManageHomeWorkerRequestJPanel(JPanel workAreaContainer, UserAccounts userAccount, Ecosystem ecosystem) {
        initComponents();
        
        this.workAreaContainer = workAreaContainer;
        this.userAccount = userAccount;
        this.ecosystem = ecosystem;
        
        populateRequestsTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        HomeworkerTable = new javax.swing.JTable();
        viewBtn = new javax.swing.JButton();
        assignBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        backBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        jLabel1.setText("Manage HomeWorker Request");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(259, 6, -1, -1));

        HomeworkerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Request ID", "Member Name", "Request Address", "Status"
            }
        ));
        jScrollPane1.setViewportView(HomeworkerTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(229, 239, -1, 230));

        viewBtn.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        viewBtn.setText("View Request ");
        viewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewBtnActionPerformed(evt);
            }
        });
        add(viewBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(261, 487, -1, -1));

        assignBtn.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        assignBtn.setText("Assign for Request ");
        assignBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignBtnActionPerformed(evt);
            }
        });
        add(assignBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(457, 487, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/HomeServiceAdmin/Homeworker88.png"))); // NOI18N
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 42, 200, -1));

        backBtn.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });
        add(backBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 490, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void viewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = HomeworkerTable.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null,"Please select a row from the table to view details", "Warning",JOptionPane.WARNING_MESSAGE);
        }
        else{
            HomeServicesWorkRequest request  = (HomeServicesWorkRequest)HomeworkerTable.getValueAt(selectedRow, 0);  
            if(request.getStatus().equals("Request Cancelled")){
                JOptionPane.showMessageDialog(null,"Request Cancelled !!! ", "Warning", JOptionPane.WARNING_MESSAGE);
            }
            else if(request.getStatus().equals("Completed")){
                JOptionPane.showMessageDialog(null,"Request Completed Already !!! ", "Warning", JOptionPane.WARNING_MESSAGE);
            }
            else{
                
                ViewHomeRequestJPanel viewRequest = new ViewHomeRequestJPanel(workAreaContainer, userAccount, request, ecosystem);
                workAreaContainer.add("View Home Services Request", viewRequest);
                CardLayout layout=(CardLayout)workAreaContainer.getLayout();
                layout.next(workAreaContainer);
            }
        }
    }//GEN-LAST:event_viewBtnActionPerformed

    private void assignBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignBtnActionPerformed
        // TODO add your handling code here:
           int selectedRow = HomeworkerTable.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null, "Please select a row from the table to view details", "Warning",JOptionPane.WARNING_MESSAGE);
        }
        else{
            HomeServicesWorkRequest request  = (   HomeServicesWorkRequest)HomeworkerTable.getValueAt(selectedRow, 0);
            if(request.getStatus().equals("New Request")){
                JOptionPane.showMessageDialog(null,"Accept the Request First", "Warning", JOptionPane.WARNING_MESSAGE);
            }
            else if(request.getStatus().equals("Request Cancelled")){
                JOptionPane.showMessageDialog(null,"Request Cancelled !!! Cannot Assign.", "Warning", JOptionPane.WARNING_MESSAGE);
            }
            else if(request.getStatus().equals("Completed")){
                JOptionPane.showMessageDialog(null,"Request COmpleted Already !!! ", "Warning", JOptionPane.WARNING_MESSAGE);
            }
            else if(request.getStatus().equals("Assigned ServiceMan")){
                JOptionPane.showMessageDialog(null,"Already Assigned Painter !!!", "Warning", JOptionPane.WARNING_MESSAGE);
            }
            else{
                 HomeServiceWorkRequestJPanel assignPainter = new  HomeServiceWorkRequestJPanel(workAreaContainer, userAccount, request, ecosystem);
                workAreaContainer.add("Assign ServiceMan", assignPainter);
                CardLayout layout=(CardLayout)workAreaContainer.getLayout();
                layout.next(workAreaContainer);
            }
        }
    }//GEN-LAST:event_assignBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        workAreaContainer.remove(this);
        CardLayout layout = (CardLayout) workAreaContainer.getLayout();
        layout.previous(workAreaContainer);
    }//GEN-LAST:event_backBtnActionPerformed

    private void populateRequestsTable() {
        DefaultTableModel model = (DefaultTableModel) HomeworkerTable.getModel();        
        model.setRowCount(0);               
        for (HomeService service:ecosystem.getHomeServiceDirectory().getHomeServiceList()) {          
            if (service.getUserName().equals(userAccount.getUsername())) {
               for(HomeServicesWorkRequest ser:service.getHomeServiceRequestList()){
                Object[] row = new Object[4];
                row[0] = ser;
                row[1] = ser.getCustName();
                row[2] = ser.getServiceAddress();
                row[3] = ser.getStatus();
                model.addRow(row);
               }                
            }            
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable HomeworkerTable;
    private javax.swing.JButton assignBtn;
    private javax.swing.JButton backBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton viewBtn;
    // End of variables declaration//GEN-END:variables
}
