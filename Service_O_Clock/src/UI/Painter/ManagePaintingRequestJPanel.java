/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.Painter;

import Business.Ecosystem;
import Customer.Customer;
import Painter.Painter;
import PestControlTechnician.PestControlTechnician;
import UserAccounts.UserAccounts;
import WorkQueue.HomePaintingWorkRequest;
import WorkQueue.PestControlWorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author 91730
 */
public class ManagePaintingRequestJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManagePaintingRequestJPanel
     */
    private JPanel workAreaContainer;
    private Ecosystem ecosystem;
    private UserAccounts userAccount;
    private HomePaintingWorkRequest request;
    
   
//    public ManagePaintingRequestJPanel(JPanel workAreaContainer, UserAccounts userAccount, HomePaintingWorkRequest request,Ecosystem ecosystem) {
//        initComponents();
//        
//        this.workAreaContainer = workAreaContainer;
//        this.userAccount = userAccount;
//        this.ecosystem = ecosystem;
//        this.request = request;
//       
//    }
    public ManagePaintingRequestJPanel() {
        initComponents();
    }

    ManagePaintingRequestJPanel(JPanel workAreaContainer, HomePaintingWorkRequest paintReq, Ecosystem ecosystem, UserAccounts userAccount) {
        initComponents();
        
        this.workAreaContainer = workAreaContainer;
        this.request=paintReq;
        this.userAccount = userAccount;
        this.ecosystem = ecosystem;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/Painter/painter1.jpeg"))); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        jButton1.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jButton1.setText("Work Completed");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(386, 241, 337, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
//        int selectedRow = painterJTable.getSelectedRow();
//        if (selectedRow < 0){
//            return;
//        }
//      HomePaintingWorkRequest order = (HomePaintingWorkRequest)painterJTable.getValueAt(selectedRow, 0);
//
//        if(order.getStatus().equals("Delivered")){
//            JOptionPane.showMessageDialog(null,"Order Already Delivered", "Warning", JOptionPane.WARNING_MESSAGE);
//        }else if(order.getStatus().equals("New Order") || order.getStatus().equals("In Progress")){
//            JOptionPane.showMessageDialog(null,"Request is not yet Assigned", "Warning", JOptionPane.WARNING_MESSAGE);
//        }
//        else{
//          
//            order.setStatus("Pickup Completed");
//        for(Customer cust:ecosystem.getCustomerDirectory().getCustomerList()){
//            if(cust.getCustomerName().equals(cust.getUsername())){
//                for(HomePaintingWorkRequest request : cust.getHomePaintingWorkRequestList()){
//                    if(request.getStatus().equals("Assigned Painter")) {
//                        request.setStatus("Service Completed");
//                        JOptionPane.showMessageDialog(null,"Request is not yet Assigned", "Warning", JOptionPane.WARNING_MESSAGE);
//                    }
//                }
//            }
//        
//        }
//        }
        request.setStatus("Completed");
        for(Customer customer:ecosystem.getCustomerDirectory().getCustomerList()){
            if(request.getCustName().equals(customer.getUsername())){
                for(HomePaintingWorkRequest request : customer.getHomePaintingWorkRequestList()){
                    if(request.getStatus().equals("Assigned Painter")){
                        request.setStatus("Completed");
                    }
                }
            }
        }
                     
        for(Painter painter : ecosystem.getPainterDirectory().getPainterList()){
            if(painter.getPainterUsername().equals(userAccount.getUsername())){
                painter.setAvailability(true);
            }
        }
        
        workAreaContainer.remove(this);
        CardLayout layout = (CardLayout) workAreaContainer.getLayout();
        layout.previous(workAreaContainer);
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
