/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.PestControlAdmin;

import Business.Ecosystem;
import Customer.Customer;
import PestControlOrganization.PestControlServices;
import UserAccounts.UserAccounts;
import WorkQueue.PestControlWorkRequest;
import WorkQueue.SalonWorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 91730
 */
public class ViewPestControlRequestJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewPestControlRequestJPanel
     */
    private JPanel workAreaContainer;
    private Ecosystem ecosystem;
    private UserAccounts userAccount;
    private PestControlWorkRequest request;
    
    public ViewPestControlRequestJPanel() {
        initComponents();
    }

    public ViewPestControlRequestJPanel(JPanel workAreaContainer, UserAccounts userAccount, PestControlWorkRequest request, Ecosystem ecosystem) {
        initComponents();
        this.workAreaContainer = workAreaContainer;
        this.userAccount = userAccount;
        this.ecosystem = ecosystem;
        this.request = request;
        populateTable();
        issue.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        pestRequestTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        issue = new javax.swing.JTextField();
        acceptRequest = new javax.swing.JButton();
        rejectRequest = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font(".AppleSystemUIFont", 1, 24)); // NOI18N
        jLabel1.setText("Pest Control Request Details");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(233, 6, -1, -1));

        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 0, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/PestControlAdmin/org1.jpeg"))); // NOI18N
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 111, 293, 334));

        pestRequestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Service Name", "Description", "Type"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(pestRequestTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(299, 54, -1, 244));

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel3.setText("Instructions");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(332, 327, -1, -1));

        issue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                issueActionPerformed(evt);
            }
        });
        add(issue, new org.netbeans.lib.awtextra.AbsoluteConstraints(491, 322, 208, -1));

        acceptRequest.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        acceptRequest.setText("Accept Request");
        acceptRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptRequestActionPerformed(evt);
            }
        });
        add(acceptRequest, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 390, -1, -1));

        rejectRequest.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        rejectRequest.setText("Reject Request");
        rejectRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rejectRequestActionPerformed(evt);
            }
        });
        add(rejectRequest, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 390, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        workAreaContainer.remove(this);
        CardLayout layout = (CardLayout) workAreaContainer.getLayout();
        layout.previous(workAreaContainer);
    }//GEN-LAST:event_backButtonActionPerformed

    private void issueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_issueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_issueActionPerformed

    private void acceptRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptRequestActionPerformed
        // TODO add your handling code here:
        if(request.getStatus().equals("In Progress")) {
            JOptionPane.showMessageDialog(null, "Already Accepted", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        else if(request.getStatus().equals("Assigned Technician")) {
            JOptionPane.showMessageDialog(null, "Already Accepted", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        else if(request.getStatus().equals("Request Cancelled")) {
            JOptionPane.showMessageDialog(null, "Request Cancelled Already", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        else{
            request.setStatus("In Progress");
            for(Customer cust:ecosystem.getCustomerDirectory().getCustomerList()){
                if(request.getCustName().equals(cust.getCustomerName())){
                    for(PestControlWorkRequest request : cust.getPestControlWorkRequestList()){
                        if(request.getStatus().equals("New Request")) {
                            request.setStatus("In Progress");
                        }

                    }
                }
            }
            workAreaContainer.remove(this);
            CardLayout layout = (CardLayout) workAreaContainer.getLayout();
            layout.previous(workAreaContainer);
        }
    }//GEN-LAST:event_acceptRequestActionPerformed

    private void rejectRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rejectRequestActionPerformed
        // TODO add your handling code here:
        if(request.getStatus().equals("New Request")) {
            request.setStatus("Request Cancelled");
            for(Customer cust:ecosystem.getCustomerDirectory().getCustomerList()){
                if(request.getCustName().equals(cust.getUsername())){
                    for(PestControlWorkRequest request : cust.getPestControlWorkRequestList()){
                        if(request.getStatus().equals("New Request")) {
                            request.setStatus("Request Cancelled");
                        }
                    }
                }
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Request is Accepted already. Cannot cancel Request !!!", "Warning", JOptionPane.WARNING_MESSAGE);
        }

        workAreaContainer.remove(this);
        CardLayout layout = (CardLayout) workAreaContainer.getLayout();
        layout.previous(workAreaContainer);
    }//GEN-LAST:event_rejectRequestActionPerformed

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) pestRequestTable.getModel();
        model.setRowCount(0);

        Object[] row = new Object[3];
                for(PestControlServices pest:request.getPestControlService()){
                     row[0] = pest;
                     row[1] = pest.getServiceDescription();
                     row[2] = pest.getServiceType();
                     model.addRow(row);
                }
        issue.setText(request.getIssue());
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton acceptRequest;
    private javax.swing.JButton backButton;
    private javax.swing.JTextField issue;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable pestRequestTable;
    private javax.swing.JButton rejectRequest;
    // End of variables declaration//GEN-END:variables
}
