/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.Painter;

import Business.Ecosystem;
import Customer.Customer;
import Painter.Painter;
import UserAccounts.UserAccounts;
import WorkQueue.HomePaintingWorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 91730
 */
public class PainterAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form PainterAreaJPanel
     */
    private JPanel workAreaContainer;
    private Ecosystem ecosystem;
    private UserAccounts userAccount;
    HomePaintingWorkRequest paintReq;
    
    public PainterAreaJPanel() {
        initComponents();
    }
    
    public PainterAreaJPanel(JPanel workAreaContainer, UserAccounts userAccount, Ecosystem ecosystem) {
        initComponents();
        
        this.workAreaContainer = workAreaContainer;
        this.userAccount = userAccount;
        this.ecosystem = ecosystem;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        painterJTable = new javax.swing.JTable();
        backButton = new javax.swing.JButton();
        Completed = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/Painter/painter1.jpeg"))); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(31, 143, -1, -1));

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        jLabel2.setText("                         Painter Request");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(109, 16, 535, 61));

        painterJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Order ID", "Painter Name", "Customer Name", "PersonName", "Service Address", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(painterJTable);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(397, 116, 689, 294));

        backButton.setBackground(new java.awt.Color(133, 211, 255));
        backButton.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 550, -1, 30));

        Completed.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        Completed.setText("Service Completed");
        Completed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CompletedActionPerformed(evt);
            }
        });
        add(Completed, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 440, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        workAreaContainer.remove(this);
        CardLayout layout = (CardLayout) workAreaContainer.getLayout();
        layout.previous(workAreaContainer);
    }//GEN-LAST:event_backButtonActionPerformed

    private void CompletedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CompletedActionPerformed
        // TODO add your handling code here:
        
        int selectedRow = painterJTable.getSelectedRow();
        if (selectedRow < 0){
            return;
        }
      HomePaintingWorkRequest order = (HomePaintingWorkRequest)painterJTable.getValueAt(selectedRow, 0);

        if(order.getStatus().equals("Delivered")){
            JOptionPane.showMessageDialog(null,"Order Already Delivered", "Warning", JOptionPane.WARNING_MESSAGE);
        }else if(order.getStatus().equals("New Order") || order.getStatus().equals("In Progress")){
            JOptionPane.showMessageDialog(null,"Request is not yet Assigned", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        else{
          
            order.setStatus("Pickup Completed");
        for(Customer cust:ecosystem.getCustomerDirectory().getCustomerList()){
            if(cust.getCustomerName().equals(cust.getUsername())){
                for(HomePaintingWorkRequest request : cust.getHomePaintingWorkRequestList()){
                    if(request.getStatus().equals("Assigned Painter")) {
                        request.setStatus("Service Completed");
                        JOptionPane.showMessageDialog(null,"Request is not yet Assigned", "Warning", JOptionPane.WARNING_MESSAGE);
                    }
                }
            }
        
        }
        }
        
    }//GEN-LAST:event_CompletedActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Completed;
    private javax.swing.JButton backButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable painterJTable;
    // End of variables declaration//GEN-END:variables

}