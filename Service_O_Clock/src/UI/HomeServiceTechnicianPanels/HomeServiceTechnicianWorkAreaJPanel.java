/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.HomeServiceTechnicianPanels;

import Beautician.BeauticianWorker;
import Business.Ecosystem;
import HomeServiceTechnician.Technician;
import UI.BeauticianPanels.BeauticianWorkRequestJPanel;
import UserAccounts.UserAccounts;
import WorkQueue.HomeServicesWorkRequest;
import WorkQueue.SalonWorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 91730
 */
public class HomeServiceTechnicianWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form HomeServiceTechnicianWorkAreaJPanel
     */
    private JPanel workAreaContainer;
    private Ecosystem ecosystem;
    private UserAccounts userAccount;
    
    public HomeServiceTechnicianWorkAreaJPanel() {
        initComponents();
    }
    
    public HomeServiceTechnicianWorkAreaJPanel(JPanel workAreaContainer, UserAccounts userAccount, Ecosystem ecosystem) {
        initComponents();
        
        this.workAreaContainer = workAreaContainer;
        this.userAccount = userAccount;
        this.ecosystem = ecosystem;
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        serviceRequest = new javax.swing.JTable();
        prcoess = new javax.swing.JButton();
        back = new javax.swing.JButton();
        refresh = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        jLabel1.setText("Home Service's Request");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(409, 6, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/HomeServiceTechnicianPanels/services1.jpeg"))); // NOI18N
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, -1, 160));

        serviceRequest.setBackground(new java.awt.Color(255, 204, 204));
        serviceRequest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Request Id", "Organisation Name", "Member Name", "Services Address", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(serviceRequest);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 130, 597, 135));

        prcoess.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        prcoess.setText("Process");
        prcoess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prcoessActionPerformed(evt);
            }
        });
        add(prcoess, new org.netbeans.lib.awtextra.AbsoluteConstraints(582, 283, -1, -1));

        back.setBackground(new java.awt.Color(133, 211, 255));
        back.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });
        add(back, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 440, -1, 30));

        refresh.setText("Refresh");
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });
        add(refresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 90, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:
                workAreaContainer.remove(this);
                CardLayout layout = (CardLayout) workAreaContainer.getLayout();
                layout.previous(workAreaContainer);
    }//GEN-LAST:event_backActionPerformed

    private void prcoessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prcoessActionPerformed
        // TODO add your handling code here:
        
        int selectedRow = serviceRequest.getSelectedRow();
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null,"Select a Row");
            return;
        }
        HomeServicesWorkRequest request = (HomeServicesWorkRequest)serviceRequest.getValueAt(selectedRow, 0);

        if(request.getStatus().equals("Completed")){
            JOptionPane.showMessageDialog(null,"Request already Completed", "Warning", JOptionPane.WARNING_MESSAGE);
        }else if(request.getStatus().equals("New Request") || request.getStatus().equals("In Progress")){
            JOptionPane.showMessageDialog(null,"Request is not yet Assigned", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        else{
            HomeServiceTechnicianWorkRequestJPanel workService = new HomeServiceTechnicianWorkRequestJPanel(workAreaContainer, request,ecosystem, userAccount);
            workAreaContainer.add("processWorkRequestJPanel", workService);
            CardLayout layout = (CardLayout) workAreaContainer.getLayout();
            layout.next(workAreaContainer);
        }
    }//GEN-LAST:event_prcoessActionPerformed

    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed
        // TODO add your handling code here:
        populateTable();
    }//GEN-LAST:event_refreshActionPerformed

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) serviceRequest.getModel();
        model.setRowCount(0);
        
        for(Technician technician : ecosystem.getHomeServiceTechnicianDirectory().getTechnicianList()){
            if(technician.getTechnicianUsrnme().equals(userAccount.getUsername())){
                System.out.println("Hello1");    
                for(HomeServicesWorkRequest request : technician.getHomeServiceRequestList()){
                System.out.println("Hello2");    
                    
                Object[] row = new Object[6];
                
                row[0] = request;
                row[1] = request.getHomeServiceCompanyName();
                row[2] = request.getCustName();
                row[3] = request.getServiceAddress();
                row[4] = request.getStatus();
                row[5] = request.getMessage();
                model.addRow(row);     
                }
            } 
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton prcoess;
    private javax.swing.JButton refresh;
    private javax.swing.JTable serviceRequest;
    // End of variables declaration//GEN-END:variables
}
