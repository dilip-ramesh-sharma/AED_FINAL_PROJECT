/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.Customer;

import Business.Ecosystem;
import Customer.Customer;
import StoreServices.Products;
import StoreServices.Store;
import UserAccounts.UserAccounts;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hi
 */
public class StoreCartJPanel extends javax.swing.JPanel {

    /**
     * Creates new form StoreCartJPanel
     */
    
    private JPanel workAreaContainer;
    private Ecosystem ecosystem;
    private UserAccounts userAccount;
    private Store store;
    ArrayList<Products> products = new ArrayList<Products>();
    int prodAmt = 0;
    int total = 0;
    
     public StoreCartJPanel(JPanel workAreaContainer, UserAccounts userAccount, Ecosystem ecosystem, Store store) {
        initComponents();
        
        this.workAreaContainer = workAreaContainer;
        this.userAccount = userAccount;
        this.ecosystem = ecosystem;
        this.store = store;
        populateProductTable();
        
    }
     
    public StoreCartJPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        serviceTable = new javax.swing.JTable();
        addBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        cartTable = new javax.swing.JTable();
        removeBtn = new javax.swing.JButton();
        placebtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        phoneNo = new javax.swing.JTextField();

        setBackground(new java.awt.Color(255, 255, 255));

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe Print", 1, 24)); // NOI18N
        jLabel1.setText("YOUR SHOPPING CART");

        serviceTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Product", "Product Description", "Product Price", "Product Category"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(serviceTable);

        addBtn.setText("Add to Cart");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        cartTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Product", "Product Description", "Product Price", "Product Category", "Amount Paid"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(cartTable);
        if (cartTable.getColumnModel().getColumnCount() > 0) {
            cartTable.getColumnModel().getColumn(4).setHeaderValue("Amount Paid");
        }

        removeBtn.setText("Remove from Cart");
        removeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeBtnActionPerformed(evt);
            }
        });

        placebtn.setText("Place Order");
        placebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                placebtnActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe Print", 1, 14)); // NOI18N
        jLabel2.setText("YOUR CART");

        jLabel3.setText("Phone Number:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(238, 238, 238)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 503, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(203, 203, 203)
                                        .addComponent(addBtn)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 426, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(169, 169, 169)))))))
                .addGap(229, 229, 229))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(placebtn)
                        .addGap(53, 53, 53)
                        .addComponent(removeBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(32, 32, 32)
                        .addComponent(phoneNo, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(269, 269, 269))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jButton1)
                .addGap(45, 45, 45)
                .addComponent(jLabel1)
                .addGap(71, 71, 71)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(addBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(316, 316, 316)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(phoneNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(placebtn)
                    .addComponent(removeBtn))
                .addGap(101, 101, 101))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void populateProductTable() {
        DefaultTableModel model = (DefaultTableModel) serviceTable.getModel();
        model.setRowCount(0);
            Object[] row = new Object[4];
            for(Products prod:store.getProductList()){
                if(prod.getAmountOpen()==true){
                 row[0] = prod;
                 row[1] = prod.getProductDescription();
                 row[2] = prod.getProductAmount();
                 row[3] = prod.getProductCategory();
                 model.addRow(row);
                }
            }
    }
    
    private void populateCart(Products prod) {
       DefaultTableModel model = (DefaultTableModel) cartTable.getModel();
        model.setRowCount(0);

        products.add(prod);
        
        Object[] row = new Object[5];
        for(Products pr:products){
            row[0] = pr;
            row[1] = pr.getProductDescription();
            row[2] = pr.getProductAmount();
            row[3] = pr.getProductCategory();
            row[4] = pr.getProdAmountCollected();
            model.addRow(row);
        }
            
        
    }
    
    private void removeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = cartTable.getSelectedRow();
        if(selectedRow < 0){
            JOptionPane.showMessageDialog(null, "No Selections Made", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        else{
            Products prod = (Products)cartTable.getValueAt(selectedRow, 0);
            products.remove(prod);
            DefaultTableModel model = (DefaultTableModel) cartTable.getModel();
            model.setRowCount(0);
            Object[] row = new Object[5];
            for(Products pr:products){
                row[0] = pr;
                row[1] = pr.getProductDescription();
                row[2] = pr.getProductAmount();
                row[3] = pr.getProductCategory();
                row[4] = pr.getProdAmountCollected();
                model.addRow(row);
            }
        }
    }//GEN-LAST:event_removeBtnActionPerformed

    private void placebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_placebtnActionPerformed
        // TODO add your handling code here:
        String phone = phoneNo.getText();
       try {

            if(phone==null || phone.isEmpty()){
                throw new NullPointerException("Enter Phone Number");
            }else if(Pattern.matches("^\\(?([0-9]{3})\\)?[-.\\s]?([0-9]{3})[-.\\s]?([0-9]{4})$", phone) == false){
                throw new Exception("Enter a Valid Phone number !!!");
            }
        }  catch(NullPointerException e){
            JOptionPane.showMessageDialog(null, "Customer Phone Number Field cannot be Empty !!!");
            return;
        }catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Enter a Valid Phone number !!!");
            return;
        }
        

        store.buyNewProduct(store.getStoreName(), userAccount.getUsername(), products, phone, total);
        for(Customer cust:ecosystem.getCustomerDirectory().getCustomerList()){
            if(userAccount.getUsername().equals(cust.getCustomerName())){
                cust.createStoreServiceRequest(store.getStoreName(), userAccount.getUsername(), products, phone, total);
            }
        }
    }//GEN-LAST:event_placebtnActionPerformed

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        // TODO add your handling code here:
        /*
        int selectedRow = serviceTable.getSelectedRow();
        if(selectedRow < 0){
            JOptionPane.showMessageDialog(null, "No Selection Made", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        else{
            Products donation = (Products)serviceTable.getValueAt(selectedRow, 0); 
            String donationAmount = JOptionPane.showInputDialog("Enter Amount to Donate :");
            donationAmt = Integer.parseInt(donationAmount);
            total = total+donationAmt;
            donation.setFundCollected(donationAmt);
            donation.setFundPerCause(donationAmt);
            populateAddedDonationTable(donation);
        }*/
    }//GEN-LAST:event_addBtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        workAreaContainer.remove(this);
        CardLayout layout = (CardLayout) workAreaContainer.getLayout();
        layout.previous(workAreaContainer);
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JTable cartTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField phoneNo;
    private javax.swing.JButton placebtn;
    private javax.swing.JButton removeBtn;
    private javax.swing.JTable serviceTable;
    // End of variables declaration//GEN-END:variables
}
